plugins {
    id("kotlin")
    id("application")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("org.jetbrains.kotlin.plugin.serialization") version "$kotlin_version"
}

version = rootProject.version

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileKotlin.kotlinOptions.jvmTarget = "17"
compileTestKotlin.kotlinOptions.jvmTarget = "17"

sourceSets.main.java.srcDirs = ["src/main/kotlin"]

dependencies {
    // Core language libraries
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")

    // LibEuFin util library
    implementation(project(":util"))

    implementation("org.postgresql:postgresql:$postgres_version")
    implementation("com.zaxxer:HikariCP:5.0.1")
    implementation("com.github.ajalt.clikt:clikt:$clikt_version")

    implementation("io.ktor:ktor-server-core:$ktor_version")
    implementation("io.ktor:ktor-server-call-logging:$ktor_version")
    implementation("io.ktor:ktor-server-cors:$ktor_version")
    implementation("io.ktor:ktor-server-content-negotiation:$ktor_version")
    implementation("io.ktor:ktor-server-status-pages:$ktor_version")
    implementation("io.ktor:ktor-server-netty:$ktor_version")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$json_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")

    // UNIX domain sockets support (used to connect to PostgreSQL)
    implementation("com.kohlschutter.junixsocket:junixsocket-core:2.8.1")

    testImplementation("org.jetbrains.kotlin:kotlin-test:$kotlin_version")
    testImplementation("io.ktor:ktor-server-test-host:$ktor_version")

    testImplementation(project(":util"))
}

application {
    mainClass = "tech.libeufin.bank.MainKt"
    applicationName = "libeufin-bank"
    applicationDefaultJvmArgs = ['-Djava.net.preferIPv6Addresses=true']
}

shadowJar {
  minimize {
    // Kotlin serialization
    exclude(dependency("io.ktor:ktor-serialization-kotlinx-json:.*"))
    // Postgres driver
    exclude(dependency("org.postgresql:postgresql:.*"))
    exclude(dependency("com.kohlschutter.junixsocket:junixsocket-core:.*"))
    // Logging
    exclude(dependency("ch.qos.logback:logback-classic:.*"))
  }
}